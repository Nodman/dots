# change prefix to c|
unbind C-b
set -g prefix 'C-q'
bind 'C-q' send-prefix

set -s escape-time 0
set -g focus-events on

# shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# screen mode
# set -g default-terminal 'tmux'
# set -g default-terminal 'tmux-256color'
set -g default-terminal 'xterm-kitty'
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# history
set -g history-limit 4060

# use vi mode
setw -g mode-keys vi
set -g status-keys vi

# splitting panes
bind \\ split-window -h
bind - split-window -v

# colon : bind : command-prompt

# pane resizing
STEP=5

bind -r H resize-pane -L $STEP
bind -r J resize-pane -D $STEP
bind -r K resize-pane -U $STEP
bind -r L resize-pane -R $STEP

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# quit from copy mode like from normal to insert mode
bind -T copy-mode-vi i send-keys -X cancel

# Setup 'v' to begin selection as in Vim
#bind -T copy-mode-vi 'v' send -X begin-selection
#bind -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
set -s set-clipboard off

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"

# use mouse in copy mode
set -g mouse on

#toggle status
bind 't' set-option -g status #Ctrl+F3 Combo

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# some key-binding changes
bind x kill-pane
bind X next-layout
bind Z previous-layout

# Automatically set window title
setw -g automatic-rename on
set -g set-titles on
set -g allow-rename off

# ==========================
#           UI
# ==========================
#

# COLORS NORD:

COLOR_NIGHT5="#616E88"
COLOR_NIGHT0="#292E39"
COLOR_NIGHT4="#4C566A"
COLOR_NIGHT3="#434C5E"
COLOR_NIGHT2="#3B4252"
COLOR_NIGHT1="#2E3440"
COLOR_SNOW3="#ECEFF4"
COLOR_SNOW2="#E5E9F0"
COLOR_SNOW1="#D8DEE9"
COLOR_FROST4="#8FBCBB"
COLOR_FROST3="#88C0D0"
COLOR_FROST2="#81A1C1"
COLOR_FROST1="#5E81AC"
COLOR_RED="#BF616A"
COLOR_ORANGE="#D08770"
COLOR_YELLOW="#EBCB8B"
COLOR_GREEN="#A3BE8C"
COLOR_PINK="#B48EAD"


RESET="#[fg=$COLOR_NIGHT5,bg=default,nobold,nounderscore,noitalics]"

# WIDGETS:
# show local ip
# IP_ADDRES="#(ipconfig getifaddr en0)"

# spotify
SPOTIFY="#(spotify-now-playing.sh)"
# SPOTIFY_PLACEHOLDER="#(spotifyInfo -p)"
# KITTY_TITLE="#(getKittyTitle)"
# KITTY_TITLE_SET="#(setKittyTitle)"

# cpu usage
# CPU_USAGE="#(getCpuUsage)"

# battery status with witch AC
# BATTERY_STAT="#(getBatteryStats)"

# STATUS
# set -g status "on"
set -g status-style none

set -g status-right-style fg=$COLOR_PINK
set -g status-left-style fg=$COLOR_ORANGE

set -g status-justify "left"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left ""
set -g status-right " $SPOTIFY "
# set -g status-left "$SPOTIFY_PLACEHOLDER"

# PANE
set -g pane-border-style bg=default,fg=$COLOR_NIGHT4
set -g pane-active-border-style bg=default,fg=$COLOR_FROST2
set -g status-position top

# MESSAGE 
set -g message-style bg=default,fg=$COLOR_SNOW3,bold

# WINDOW
setw -g window-status-style bg=default,fg=$COLOR_FROST4
setw -g window-status-current-style bg=default,fg=$COLOR_FROST4,reverse
setw -g window-status-activity-style fg=$COLOR_SNOW3,none
setw -g window-status-separator ""
set -g window-status-current-format " #W#{?window_zoomed_flag, ,} "
set -g window-status-format " #W#{?window_zoomed_flag, ,} "

# Plugins

set -g @resurrect-strategy-nvim 'session'

set -g @plugin 'tmux-plugins/tmux-resurrect'

# navigation

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-w switch-client -T NAVIGATOR

bind -T NAVIGATOR h if-shell "$is_vim" 'send-keys C-w h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind -T NAVIGATOR j if-shell "$is_vim" 'send-keys C-w j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind -T NAVIGATOR k if-shell "$is_vim" 'send-keys C-w k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind -T NAVIGATOR l if-shell "$is_vim" 'send-keys C-w l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -T NAVIGATOR C-w send-keys C-w

 set -g @tmux-nvim-resize-keybinding-right 'M-l'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

#hooks

# set -g focus-events on
# set-hook -g pane-focus-in "$KITTY_TITLE_SET"
